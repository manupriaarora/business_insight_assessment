version: 0.2

env:
  variables:
    ECR_REPOSITORY_NAME: "aws_glue_streamlit_cicd_automation"
    IMAGE_NAME: "streamlit-dashboard"
    AWS_REGION: "us-east-1"

phases:
  pre_build:
    commands:
      - echo "Starting pre-build phase..."
      - AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - ECR_URI="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com"
      - ECR_REPOSITORY_URI="$ECR_URI/$ECR_REPOSITORY_NAME"
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_URI
      - echo "Logging in to Docker Hub..."
      - docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD || echo "Docker Hub login failed, continuing..."
  build:
    commands:
      - echo "Building Docker image..."
      - docker build -t $ECR_REPOSITORY_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION .
      - docker tag $ECR_REPOSITORY_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION $ECR_REPOSITORY_URI:latest
  post_build:
    commands:
      - echo "Pushing Docker images to ECR..."
      - docker push $ECR_REPOSITORY_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION
      - docker push $ECR_REPOSITORY_URI:latest
      - echo "Installing Python dependencies for Glue update..."
      - pip install boto3
      - echo "Updating Glue jobs..."
      - python cicd/update_glue_jobs.py || echo "Glue job update failed, check script."
      - echo '[{"name":"streamlit-container","imageUri":"'$ECR_REPOSITORY_URI':latest"}]' > imagedefinitions.json
artifacts:
  files:
    - imagedefinitions.json